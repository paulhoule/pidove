memberSearchIndex = [{"p":"com.ontology2.pidove.util","c":"Consumer3","l":"accept(A, B, C)","u":"accept(A,B,C)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"accumulate(BinaryOperator<X>, Iterable<X>)","u":"accumulate(java.util.function.BinaryOperator,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"all(Iterable<Boolean>)","u":"all(java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"and(Z)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"any(Iterable<Boolean>)","u":"any(java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Function3","l":"apply(A, B, C)","u":"apply(A,B,C)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"asList(Iterable<X>)","u":"asList(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"asMap(Iterable<Pair<X, Y>>)","u":"asMap(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"asSet(Iterable<X>)","u":"asSet(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"at(int, Iterable<X>)","u":"at(int,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"at(int, X[])","u":"at(int,X[])"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"cast(Object)","u":"cast(java.lang.Object)"},{"p":"com.ontology2.pidove.iterables","c":"MoreCollectors","l":"characters()"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"clear()"},{"p":"com.ontology2.pidove.iterables","c":"TidyIterator","l":"close()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"close(Object)","u":"close(java.lang.Object)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"coalesce(X, X)","u":"coalesce(X,X)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"coalesce(X, X, X)","u":"coalesce(X,X,X)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"coalesce(X, X, X, X...)","u":"coalesce(X,X,X,X...)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"collect(Collector<? super X, Y, Z>, Iterable<X>)","u":"collect(java.util.stream.Collector,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"compose(BiFunction<A, B, X>, Function<X, C>)","u":"compose(java.util.function.BiFunction,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"compose(Function<A, X>, Function<X, B>)","u":"compose(java.util.function.Function,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"compose(Function<A, X1>, Function<X1, X2>, Function<X2, B>)","u":"compose(java.util.function.Function,java.util.function.Function,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"compose(Function<A, X1>, Function<X1, X2>, Function<X2, X3>, Function<X3, B>)","u":"compose(java.util.function.Function,java.util.function.Function,java.util.function.Function,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"compose(Supplier<A>, Function<A, B>)","u":"compose(java.util.function.Supplier,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"composePredicate(BiFunction<A, B, X>, Predicate<X>)","u":"composePredicate(java.util.function.BiFunction,java.util.function.Predicate)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"composePredicate(Function<A, B>, Predicate<B>)","u":"composePredicate(java.util.function.Function,java.util.function.Predicate)"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"Composer()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.util","c":"Composer","l":"composeVoid(Function<A, B>, Consumer<B>)","u":"composeVoid(java.util.function.Function,java.util.function.Consumer)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"compress(Iterable<Boolean>, Iterable<X>)","u":"compress(java.lang.Iterable,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"concat(Iterable<X>...)","u":"concat(java.lang.Iterable...)"},{"p":"com.ontology2.pidove.util","c":"Suppliers","l":"constant(X)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"containsKey(Object)","u":"containsKey(java.lang.Object)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"containsValue(Object)","u":"containsValue(java.lang.Object)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"count(Iterable<X>)","u":"count(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"MoreCollectors","l":"countDistinct()"},{"p":"com.ontology2.pidove.util","c":"Curry","l":"Curry()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.util","c":"Curry","l":"curry(BiFunction<A, B, C>)","u":"curry(java.util.function.BiFunction)"},{"p":"com.ontology2.pidove.util","c":"Curry","l":"curry(Function3<A, B, C, X>)","u":"curry(com.ontology2.pidove.util.Function3)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"cycle(Iterable<X>)","u":"cycle(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"cycle(long, Iterable<X>)","u":"cycle(long,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"DefaultMap(Map<K, V>, Supplier<V>)","u":"%3Cinit%3E(java.util.Map,java.util.function.Supplier)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"DefaultMap(Supplier<V>)","u":"%3Cinit%3E(java.util.function.Supplier)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"defaultValue"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"distinct(Iterable<X>)","u":"distinct(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"dropWhile(Predicate<? super X>, Iterable<X>)","u":"dropWhile(java.util.function.Predicate,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"DuctTape()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"empty()"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"entrySet()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"enumerate(Iterable<X>)","u":"enumerate(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"enumerate(Long, Iterable<X>)","u":"enumerate(java.lang.Long,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"equals(Object)","u":"equals(java.lang.Object)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"filter(Predicate<? super X>, Iterable<X>)","u":"filter(java.util.function.Predicate,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"filterFalse(Predicate<X>, Iterable<X>)","u":"filterFalse(java.util.function.Predicate,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"first()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"first()"},{"p":"com.ontology2.pidove.util","c":"Tuple","l":"first()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"first(Iterable<X>)","u":"first(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"flatMap(Function<X, ? extends Iterable<Y>>, Iterable<X>)","u":"flatMap(java.util.function.Function,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"MoreCollectors","l":"flatMapping(Function<? super T, ? extends Iterable<? extends U>>, Collector<? super U, A, R>)","u":"flatMapping(java.util.function.Function,java.util.stream.Collector)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"flatten(Iterable<? extends Iterable<X>>)","u":"flatten(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"TidyIterable","l":"forEach(Consumer<? super X>)","u":"forEach(java.util.function.Consumer)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"forEach(Consumer<? super X>, Iterable<X>)","u":"forEach(java.util.function.Consumer,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"generate(Supplier<Supplier<X>>)","u":"generate(java.util.function.Supplier)"},{"p":"com.ontology2.pidove.util","c":"ExceptionalSupplier","l":"get()"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"get(Object)","u":"get(java.lang.Object)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"hashCode()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"hashCode()"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"innerMap"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"isEmpty()"},{"p":"com.ontology2.pidove.util","c":"Suppliers","l":"iterable(Iterable<X>)","u":"iterable(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"Iterables()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"iterate(X, UnaryOperator<X>)","u":"iterate(X,java.util.function.UnaryOperator)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"joinOn(CharSequence, Iterable<? extends CharSequence>)","u":"joinOn(java.lang.CharSequence,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"keySet()"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"lambda(BiConsumer<A, B>)","u":"lambda(java.util.function.BiConsumer)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"lambda(BiFunction<A, B, C>)","u":"lambda(java.util.function.BiFunction)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"lambda(Consumer<A>)","u":"lambda(java.util.function.Consumer)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"lambda(Consumer3<A, B, C>)","u":"lambda(com.ontology2.pidove.util.Consumer3)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"lambda(Function<A, B>)","u":"lambda(java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"lambda(Function3<A, B, C, D>)","u":"lambda(com.ontology2.pidove.util.Function3)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"last()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"last()"},{"p":"com.ontology2.pidove.util","c":"Tuple","l":"last()"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"left()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"left()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"len(CharSequence)","u":"len(java.lang.CharSequence)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"len(Iterable<T>)","u":"len(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"len(T[])"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"limit(int, Iterable<X>)","u":"limit(int,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"map(Function<X, Y>, Iterable<X>)","u":"map(java.util.function.Function,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Maps","l":"mapOfLists()"},{"p":"com.ontology2.pidove.util","c":"Maps","l":"mapOfMaps()"},{"p":"com.ontology2.pidove.util","c":"Maps","l":"mapOfSets()"},{"p":"com.ontology2.pidove.util","c":"Maps","l":"Maps()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"max(Iterable<X>)","u":"max(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"max(Iterable<X>, Comparator<X>)","u":"max(java.lang.Iterable,java.util.Comparator)"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"middle()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"min(Comparator<X>, Iterable<X>)","u":"min(java.util.Comparator,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"min(Iterable<X>)","u":"min(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"MoreCollectors","l":"MoreCollectors()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"none(Iterable<Boolean>)","u":"none(java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"Null()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"of(A, B, C)","u":"of(A,B,C)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"of(X)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"of(X, Y)","u":"of(X,Y)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"of(X...)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"ofNullable(X)"},{"p":"com.ontology2.pidove.iterables","c":"OnCloseException","l":"OnCloseException(Exception)","u":"%3Cinit%3E(java.lang.Exception)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"over(CharSequence)","u":"over(java.lang.CharSequence)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"over(Iterables.SupplierOfBufferedReader)","u":"over(com.ontology2.pidove.iterables.Iterables.SupplierOfBufferedReader)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"over(Iterables.SupplierOfInputStream)","u":"over(com.ontology2.pidove.iterables.Iterables.SupplierOfInputStream)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"over(Map<X, Y>)","u":"over(java.util.Map)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"over(Path)","u":"over(java.nio.file.Path)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"over(X[])"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"Pair(X, Y)","u":"%3Cinit%3E(X,Y)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"pairwise(Iterable<X>)","u":"pairwise(java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"Partial()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partial(BiConsumer<A, B>, A)","u":"partial(java.util.function.BiConsumer,A)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partial(BiFunction<A, B, X>, A)","u":"partial(java.util.function.BiFunction,A)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partial(Consumer3<A, B, C>, A)","u":"partial(com.ontology2.pidove.util.Consumer3,A)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partial(Consumer3<A, B, C>, A, B)","u":"partial(com.ontology2.pidove.util.Consumer3,A,B)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partial(Function3<A, B, C, X>, A)","u":"partial(com.ontology2.pidove.util.Function3,A)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partial(Function3<A, B, C, X>, A, B)","u":"partial(com.ontology2.pidove.util.Function3,A,B)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partialR(BiConsumer<A, B>, B)","u":"partialR(java.util.function.BiConsumer,B)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partialR(BiFunction<A, B, X>, B)","u":"partialR(java.util.function.BiFunction,B)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partialR(Consumer3<A, B, C>, B, C)","u":"partialR(com.ontology2.pidove.util.Consumer3,B,C)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partialR(Consumer3<A, B, C>, C)","u":"partialR(com.ontology2.pidove.util.Consumer3,C)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partialR(Function3<A, B, C, X>, B, C)","u":"partialR(com.ontology2.pidove.util.Function3,B,C)"},{"p":"com.ontology2.pidove.util","c":"Partial","l":"partialR(Function3<A, B, C, X>, C)","u":"partialR(com.ontology2.pidove.util.Function3,C)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"peek(Consumer<X>, Iterable<X>)","u":"peek(java.util.function.Consumer,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"product(Iterable<X>, Iterable<Y>)","u":"product(java.lang.Iterable,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"product(Iterable<X>, Iterable<Y>, Iterable<Z>)","u":"product(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"put(K, V)","u":"put(K,V)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"putAll(Map<? extends K, ? extends V>)","u":"putAll(java.util.Map)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"range(long)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"range(long, long)","u":"range(long,long)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"range(long, long, long)","u":"range(long,long,long)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"reduce(BinaryOperator<X>, Iterable<X>)","u":"reduce(java.util.function.BinaryOperator,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"reduce(X, BinaryOperator<X>, Iterable<X>)","u":"reduce(X,java.util.function.BinaryOperator,java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"remove(Object)","u":"remove(java.lang.Object)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"repeat(long, X)","u":"repeat(long,X)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"reverse()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"reversed(Iterable<X>)","u":"reversed(java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"right()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"right()"},{"p":"com.ontology2.pidove.util","c":"ExceptionalRunnable","l":"run()"},{"p":"com.ontology2.pidove.util","c":"Null","l":"safe(X, Function<X, Y>)","u":"safe(X,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"safe(X, Function<X, Y>, Function<Y, Z>)","u":"safe(X,java.util.function.Function,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"safe(X, Function<X, Y>, Function<Y, Z>, Function<Z, ZZ>)","u":"safe(X,java.util.function.Function,java.util.function.Function,java.util.function.Function)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"safe0(X, Consumer<X>)","u":"safe0(X,java.util.function.Consumer)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"safe0(X, Function<X, Y>, Consumer<Y>)","u":"safe0(X,java.util.function.Function,java.util.function.Consumer)"},{"p":"com.ontology2.pidove.util","c":"Null","l":"safe0(X, Function<X, Y>, Function<Y, Z>, Consumer<Z>)","u":"safe0(X,java.util.function.Function,java.util.function.Function,java.util.function.Consumer)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"size()"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"size()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"size()"},{"p":"com.ontology2.pidove.util","c":"Tuple","l":"size()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"skip(int, Iterable<X>)","u":"skip(int,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"splitOn(String, int, String)","u":"splitOn(java.lang.String,int,java.lang.String)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"splitOn(String, String)","u":"splitOn(java.lang.String,java.lang.String)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"sumDouble(Iterable<Double>)","u":"sumDouble(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"sumInt(Iterable<Integer>)","u":"sumInt(java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"sumLong(Iterable<Long>)","u":"sumLong(java.lang.Iterable)"},{"p":"com.ontology2.pidove.util","c":"Suppliers","l":"Suppliers()","u":"%3Cinit%3E()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"tail(int, Iterable<X>)","u":"tail(int,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"takeWhile(Predicate<? super X>, Iterable<X>)","u":"takeWhile(java.util.function.Predicate,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"TidyIterator","l":"that"},{"p":"com.ontology2.pidove.iterables","c":"TidyIterator","l":"TidyIterator(Iterator<X>)","u":"%3Cinit%3E(java.util.Iterator)"},{"p":"com.ontology2.pidove.util","c":"Pair","l":"toString()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"toString()"},{"p":"com.ontology2.pidove.util","c":"Trio","l":"Trio(X, Y, Z)","u":"%3Cinit%3E(X,Y,Z)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"uncheck(ExceptionalRunnable)","u":"uncheck(com.ontology2.pidove.util.ExceptionalRunnable)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"uncheck(ExceptionalSupplier<X>)","u":"uncheck(com.ontology2.pidove.util.ExceptionalSupplier)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"unchecked(ExceptionalRunnable)","u":"unchecked(com.ontology2.pidove.util.ExceptionalRunnable)"},{"p":"com.ontology2.pidove.util","c":"DuctTape","l":"unchecked(ExceptionalSupplier<X>)","u":"unchecked(com.ontology2.pidove.util.ExceptionalSupplier)"},{"p":"com.ontology2.pidove.util","c":"Curry","l":"uncurry(Curry2<A, B, C>)","u":"uncurry(com.ontology2.pidove.util.Curry2)"},{"p":"com.ontology2.pidove.util","c":"Curry","l":"uncurry3(Curry3<A, B, C, X>)","u":"uncurry3(com.ontology2.pidove.util.Curry3)"},{"p":"com.ontology2.pidove.util","c":"DefaultMap","l":"values()"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"window(int, Collector<X, ?, Y>, Iterable<X>)","u":"window(int,java.util.stream.Collector,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"zip(Iterable<X>, Iterable<Y>)","u":"zip(java.lang.Iterable,java.lang.Iterable)"},{"p":"com.ontology2.pidove.iterables","c":"Iterables","l":"zip(Iterable<X>, Iterable<Y>, Iterable<Z>)","u":"zip(java.lang.Iterable,java.lang.Iterable,java.lang.Iterable)"}];updateSearchResults();